#%RAML 1.0
baseUri: https://mocksvc.mulesoft.com/mocks/f5959cd2-09c9-4a66-953d-d78588bed772/localhost # baseUri: localhost
title: Omnichannel API
description: this api connects with becons, places, users, organizations.
version: v1
types:
  beacon: !include resourceTypes/beacon.raml
  beaconType: !include resourceTypes/beacon_type.raml
  beaconHierarchy: !include resourceTypes/beacon_hierarchy.raml
  beaconPlaceHierarchyUpdate: !include resourceTypes/beacon_place_hierarchy_put.raml
  beaconsPlacesHierarchy: !include resourceTypes/beacons_place_hierarchy.raml
  place: !include resourceTypes/places.raml
  User: !include resourceTypes/user.raml   
  Users: !include resourceTypes/users.raml
  userAccess: !include resourceTypes/user_access.raml
  userRole: !include resourceTypes/user_role.raml
  organization: !include resourceTypes/organization.raml
  contentCards: !include resourceTypes/contentCards.raml
  contentCardPost: !include resourceTypes/contentCardPost.raml
  contentCardPut: !include resourceTypes/contentCardPut.raml   
/beacons:
  get:
    description: Get All Beacon
    responses:
      200:
        body:
          application/json:
            type: beacon[]
            example: !include examples/json_files/beacons.json
  /{id_organization}:
    get:
      description: Get All Beacon by Organization
      responses:
        200:
          body:
            application/json:
              type: beacon[]
              example: !include examples/json_files/beacons.json
    /{id_beacon}:
      get:
        description: Get a Beacon
        responses:
          200:
            body:
              application/json:
                type: beacon
                example: !include examples/json_files/beacon.json
      put:
        description: Update a Beacon
        body:
          application/json:
            type: !include resourceTypes/beacon_put.raml
            example: !include examples/json_files/beacon_put.json
        responses: 
          200:
            body: 
              application/json:
                example: !include examples/response_files/beacon_updated.json     
    /type:
      get:
        description: Get All Beacons Types
        responses:
          200:
            body:
              application/json:
                type: beaconType[]
                example: !include examples/json_files/beaconTypes.json
      post:
        description: Register a Beacon Type
        body:
          application/json:
            type: !include resourceTypes/beacon_type_post.raml
            example: !include examples/json_files/beacon_type_post.json
        responses: 
           201:
             body: 
               application/json:
                 example: !include examples/response_files/registered_beacon_type.json      
      /{id_beacon_type}:
        get:
          description: Get a Beacon Type
          responses:
            200:
              body:
                application/json:
                  type: beaconType
                  example: !include examples/json_files/beaconType.json
        put:
          description: Update a Beacon Type
          body:
            application/json:
              type: !include resourceTypes/beacon_type.raml
              example: !include examples/json_files/beaconType.json
          responses: 
            200:
              body: 
                application/json:
                  example: !include examples/response_files/beacon_type_updated.json 
    /hierarchy:
      post:
        description: Register a Beacon Type
        body:
          application/json:
            type: !include resourceTypes/beacon_hierarchy_post.raml
            example: !include examples/json_files/beacon_hierarchy_post.json
        responses: 
          201:
            body: 
              application/json:
                example: !include examples/response_files/registered_beacon_hierarchy.json    
      get:
        description: Get All Beacons Hierarchies
        responses:
          200:
            body:
              application/json:
                type: beaconHierarchy[]
                example: !include examples/json_files/beaconHierarchies.json
      /{id_beacon_hierarchy}:
        get:
          description: Get a Beacon Hierarchy
          responses:
            200:
              body:
                application/json:
                  type: beaconHierarchy
                  example: !include examples/json_files/beaconHierarchy.json
        put:
          description: Update a Beacon Hierarchy
          body:
            application/json:
              type: !include resourceTypes/beacon_hierarchy.raml
              example: !include examples/json_files/beaconHierarchy.json
          responses:
            200:
              body:
                application/json:
                  example: !include examples/response_files/beacon_hierarchy_updated.json    
    /place_hierarchy:
      get:
        description: Get All Beacons Place Hierarchy
        responses:
          200:
            body:
              application/json:
                type: beaconsPlacesHierarchy
                example: !include examples/json_files/beaconsPlaceHierarchy.json       
      put:
        description: Update a Beacon Place Hierarchy
        queryParameters: 
          operation:
            type: string
            description: Type operation to trigger stored procedure
            enum: [update_place_hierarchy, update_beacon_hierarchy]
            required: true
          id:
            type: integer
            description: Id of the object to be updated
            required: true 
        body:
          application/json:
            type: !include resourceTypes/beacon_place_hierarchy_put.raml
            example: !include examples/json_files/beaconPlaceHierarchy.json
        responses: 
          200:
            body: 
              application/json:
                example: !include examples/response_files/beacon_place_hierarchy_updated.json
/{id_organization}:
  /places:
    get:
      description: Get all places from a Organization
      responses: 
        200:
          body: 
            application/json:
              type: place[]
              example: !include examples/json_files/places.json
    post:
      description: Create a new place
      body: 
        application/json:
          type: place
          example: !include examples/json_files/place.json
      responses: 
        200:
          body: 
            application/json:
              example: !include examples/json_files/responses/place_created.json
    /{id_place}:
      get:
        description: Get a place by Id
        responses: 
          200:
            body: 
              application/json:
                type: place
                example: !include examples/json_files/place.json
      put:
        description: Update a place
        body: 
          application/json:
            type: place
            example: !include examples/json_files/place.json
        responses: 
          200:
            body: 
              application/json:
                example: !include examples/json_files/responses/place_updated.json
  /content_cards:
    get:
      responses: 
        200:
          body: 
            application/json:
              type: contentCards[]
              example: !include examples/json_files/contentCards.json
    post:
      body: 
        application/json:
          type: contentCardPost
          example: !include examples/json_files/contentCardPost.json
      responses: 
        200:
          body: 
            application/json:
              example: !include examples/json_files/responses/contentCardInserted.json
    /{id_content_card}:
      get:
        responses: 
          200:
            body: 
              application/json:
                type: contentCardPut
                example: !include examples/json_files/contentCardPut.json      
      put:
        body: 
          application/json:
            type: contentCardPut
            example: !include examples/json_files/contentCardPut.json
        responses: 
          200:
            body: 
              application/json:
                example: !include examples/json_files/responses/contenCardUpdated.json                     
/users:
  get:
    queryParameters:
      id_organization?: 
        type: string
        description: Fecth users by organization (Filter)
    description: Get all users from
    responses: 
      200:
        body: 
          application/json:
            type: Users[]
            example: !include examples/json_files/users.json
  post:
    description: Create a new user
    body: 
      application/json:
        type: User
        example: !include examples/json_files/user_post.json
    responses: 
      200:
        body: 
          application/json:
            example: !include examples/json_files/responses/user_created.json
  /{id_user}:
    get:
      description: Get an users by Id
      responses: 
        200:
          body: 
            application/json:
              type: User
              example: !include examples/json_files/user.json
    put:
      description: Update a user
      body: 
        application/json:
          type: User
          example: !include examples/json_files/user.json
      responses: 
        200:
          body: 
            application/json:
              example: !include examples/json_files/responses/user_updated.json
  /access:
    post:
      body: 
        application/json:
          type: userAccess
          example: !include examples/json_files/user_access.json
      responses: 
        200:
          body: 
            application/json:
              example: !include examples/json_files/user_access_response.json
  /roles:
    get:
      description: Get all users roles
      responses: 
        200:
          body: 
            application/json:
              type: userRole[]
              example: !include examples/json_files/user_roles.json
    post:
      description: Created a new user role
      body: 
        application/json:
          type: userRole
          example: !include examples/json_files/user_role.json
      responses: 
        201:
          body: 
            application/json:
              example: !include examples/json_files/responses/user_role_created.json
    /{id_user_role}:
      get:
        description: Get an user role by Id
        responses: 
          200:
            body: 
              application/json:
                type: userRole
                example: !include examples/json_files/user_role.json
      put:
        description: Update an user role by Id
        body: 
          application/json:
            type: userRole
            example: !include examples/json_files/user_role.json
        responses: 
          204:
            body: 
              application/json:
                example: !include examples/json_files/responses/user_role_created.json
/organizations:
  get:
    description: Get all organizations
    responses: 
      200:
        body: 
          application/json:
            type: organization[]
            example: !include examples/json_files/organizations.json
  post:
    description: Create a new organization
    body: 
      application/json:
        type: organization
        example: !include examples/json_files/organization.json
    responses: 
      200:
        body: 
          application/json:
            example: !include examples/json_files/responses/organization_created.json
  /{id_organization}:
    get:
      description: Get a organization by Id
      responses: 
        200:
          body: 
            application/json:
              type: organization
              example: !include examples/json_files/organization.json
    put:
      description: Update an organization
      body: 
        application/json:
          type: organization
          example: !include examples/json_files/organization.json
      responses: 
        200:
          body: 
            application/json:
              example: !include examples/json_files/responses/organization_updated.json                                                   